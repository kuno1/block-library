!function(e){var t={};function n(l){if(t[l])return t[l].exports;var r=t[l]={i:l,l:!1,exports:{}};return e[l].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,l){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:l})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var l=Object.create(null);if(n.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(l,r,function(t){return e[t]}.bind(null,r));return l},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=70)}({70:function(e,t,n){e.exports=n(71)},71:function(e,t){
/*!
 * Tiled Grid
 *
 * wpdeps=wp-blocks, kbl, wp-block-editor, wp-components, wp-data, kbl-components-add-child, kbl-tile
 */
var n=wp.blocks.registerBlockType,l=wp.i18n,r=l.__,o=l.sprintf,i=wp.blockEditor,a=i.InnerBlocks,c=i.InspectorControls,u=wp.components,s=u.PanelBody,m=u.Button,b=u.RangeControl,d=u.SelectControl,p=kbl,f=p.addChild,k=p.ChildInsert,v=function(e,t){var n=["kbl-tiled-grid"];switch(e&&n.push(e),n.push(o("has-%d-columns",t.columns)),n.push(o("has-%d-mobile-columns",t.mobile)),t.verticalAlign){case"top":n.push("is-items-top");break;case"bottom":n.push("is-items-bottom")}return n.join(" ")};n("kunoichi/tiled-grid",{title:r("Tiled Grid","kbl"),icon:"screenoptions",category:"layout",description:r("Grid style layout of panel items. Ready for text & background colors.","kbl"),attributes:{columns:{type:"number",default:2},mobile:{type:"number",default:1},verticalAlign:{type:"string",default:""}},supports:{align:["wide","full"]},edit:function(e){var t=e.attributes,n=e.setAttributes,l=e.className,o=e.clientId;return React.createElement(React.Fragment,null,React.createElement(c,null,React.createElement(s,{title:r("Tiled Grid Setting","kbl"),defaultOpen:!0},React.createElement(m,{isPrimary:!0,onClick:function(){return f("kunoichi/tile",o)}},r("Add New Tile","kbl")),React.createElement("hr",null),React.createElement(b,{label:r("Column Count","kbl"),value:t.columns,min:1,max:4,onChange:function(e){return n({columns:e})}}),React.createElement(b,{label:r("Mobile Max Columns","kbl"),value:t.mobile,min:1,max:2,onChange:function(e){return n({mobile:e})}}),React.createElement(d,{label:r("Vertical Alignment","kbl"),value:t.verticalAlign,onChange:function(e){return n({verticalAlign:e})},options:[{label:r("Center","kbl"),value:""},{label:r("Top","kbl"),value:"top"},{label:r("Bottom","kbl"),value:"bottom"}],help:r("Global vertical alignment of child tiles.","kbl")}))),React.createElement("div",{className:v(l,t)},React.createElement(a,{allowedBlocks:["kunoichi/tile"],renderAppender:!1,template:[["kunoichi/tile"],["kunoichi/tile"]]}),React.createElement(k,{block:"kunoichi/tile",clientId:o})))},save:function(e){var t=e.attributes;return React.createElement("div",{className:v(!1,t)},React.createElement(a.Content,null))}})}});
//# sourceMappingURL=tiled-grid.js.map